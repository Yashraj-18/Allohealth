(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[626],{8102:function(e,t,a){Promise.resolve().then(a.bind(a,1193))},1193:function(e,t,a){"use strict";a.r(t),a.d(t,{default:function(){return h}});var s=a(7437),i=a(2265),n=a(9343),r=a(1014),o=a(5285),l=a(9630),c=a(6463),d=a(8726),u=a(7905),m=a(3274);let p=o.Ry({email:o.Z_().email("Please enter a valid email address"),password:o.Z_().min(1,"Password is required")});function h(){let{login:e}=(0,l.a)(),t=(0,c.useRouter)(),[a,o]=(0,i.useState)(!1),{register:h,handleSubmit:f,formState:{errors:w}}=(0,n.cI)({resolver:(0,r.F)(p)}),g=async a=>{o(!0);try{await e(a.email,a.password)?(d.Am.success("Login successful!"),t.push("/dashboard")):d.Am.error("Login failed. Please check your credentials.")}catch(e){d.Am.error("An error occurred during login.")}finally{o(!1)}};return(0,s.jsxs)("div",{className:"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8",children:[(0,s.jsxs)("div",{className:"sm:mx-auto sm:w-full sm:max-w-md",children:[(0,s.jsx)("div",{className:"flex justify-center",children:(0,s.jsx)("div",{className:"w-12 h-12 bg-primary-600 rounded-lg flex items-center justify-center",children:(0,s.jsx)(u.Z,{className:"w-8 h-8 text-white"})})}),(0,s.jsx)("h2",{className:"mt-6 text-center text-3xl font-extrabold text-gray-900",children:"Front Desk System"}),(0,s.jsx)("p",{className:"mt-2 text-center text-sm text-gray-600",children:"Sign in to your account"})]}),(0,s.jsx)("div",{className:"mt-8 sm:mx-auto sm:w-full sm:max-w-md",children:(0,s.jsxs)("div",{className:"card py-8 px-4 sm:px-10",children:[(0,s.jsxs)("form",{className:"space-y-6",onSubmit:f(g),children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("label",{htmlFor:"email",className:"block text-sm font-medium text-gray-700",children:"Email address"}),(0,s.jsxs)("div",{className:"mt-1",children:[(0,s.jsx)("input",{id:"email",type:"email",autoComplete:"email",...h("email"),className:"input-field",placeholder:"Enter your email"}),w.email&&(0,s.jsx)("p",{className:"mt-1 text-sm text-red-600",children:w.email.message})]})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("label",{htmlFor:"password",className:"block text-sm font-medium text-gray-700",children:"Password"}),(0,s.jsxs)("div",{className:"mt-1",children:[(0,s.jsx)("input",{id:"password",type:"password",autoComplete:"current-password",...h("password"),className:"input-field",placeholder:"Enter your password"}),w.password&&(0,s.jsx)("p",{className:"mt-1 text-sm text-red-600",children:w.password.message})]})]}),(0,s.jsx)("div",{children:(0,s.jsx)("button",{type:"submit",disabled:a,className:"w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center",children:a?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m.Z,{className:"w-4 h-4 mr-2 animate-spin"}),"Signing in..."]}):(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(u.Z,{className:"w-4 h-4 mr-2"}),"Sign in"]})})})]}),(0,s.jsxs)("div",{className:"mt-6",children:[(0,s.jsxs)("div",{className:"relative",children:[(0,s.jsx)("div",{className:"absolute inset-0 flex items-center",children:(0,s.jsx)("div",{className:"w-full border-t border-gray-300"})}),(0,s.jsx)("div",{className:"relative flex justify-center text-sm",children:(0,s.jsx)("span",{className:"px-2 bg-white text-gray-500",children:"Demo Credentials"})})]}),(0,s.jsxs)("div",{className:"mt-4 text-center text-sm text-gray-600",children:[(0,s.jsx)("p",{children:"Email: staff@clinic.com"}),(0,s.jsx)("p",{children:"Password: any password"})]})]})]})})]})}},9630:function(e,t,a){"use strict";a.d(t,{AuthProvider:function(){return l},a:function(){return c}});var s=a(7437),i=a(2265),n=a(6463),r=a(2800);let o=(0,i.createContext)(void 0);function l(e){let{children:t}=e,[a,l]=(0,i.useState)(null),[c,d]=(0,i.useState)(!0),u=(0,n.useRouter)();(0,i.useEffect)(()=>{localStorage.getItem("authToken")&&l({id:"1",email:"staff@clinic.com",name:"Front Desk Staff",role:"staff"}),d(!1)},[]);let m=async(e,t)=>{try{if(d(!0),e&&t){let a=await r.kv.login(e,t);if(200===a.statusCode)return localStorage.setItem("authToken",a.data.access_token),l({id:a.data.user.id.toString(),email:a.data.user.email,name:a.data.user.name,role:a.data.user.role}),!0}return!1}catch(e){return console.error("Login error:",e),!1}finally{d(!1)}};return(0,s.jsx)(o.Provider,{value:{user:a,login:m,logout:()=>{localStorage.removeItem("authToken"),l(null),u.push("/login")},isLoading:c},children:t})}function c(){let e=(0,i.useContext)(o);if(void 0===e)throw Error("useAuth must be used within an AuthProvider");return e}},2800:function(e,t,a){"use strict";a.d(t,{CN:function(){return d},kv:function(){return l},mr:function(){return u},vD:function(){return m},vY:function(){return c}});let s=[{id:1,name:"Dr. John Smith",specialization:"Cardiology",gender:"male",location:"Floor 1, Room 101",phone:"+1 234-567-8900",email:"john.smith@clinic.com",availableSlots:["09:00 AM","10:00 AM","02:00 PM","03:00 PM"],isActive:!0},{id:2,name:"Dr. Sarah Johnson",specialization:"Dermatology",gender:"female",location:"Floor 2, Room 205",phone:"+1 234-567-8901",email:"sarah.johnson@clinic.com",availableSlots:["09:30 AM","11:00 AM","02:30 PM","04:00 PM"],isActive:!0},{id:3,name:"Dr. Mike Wilson",specialization:"Orthopedics",gender:"male",location:"Floor 1, Room 103",phone:"+1 234-567-8902",email:"mike.wilson@clinic.com",availableSlots:["10:30 AM","02:00 PM","03:30 PM","04:30 PM"],isActive:!0},{id:4,name:"Dr. Emily Brown",specialization:"Pediatrics",gender:"female",location:"Floor 3, Room 301",phone:"+1 234-567-8903",email:"emily.brown@clinic.com",availableSlots:["09:00 AM","11:30 AM","02:00 PM","03:30 PM"],isActive:!0}],i=[{id:1,patientName:"John Doe",queueNumber:1,status:"waiting",phone:"+1 555-0101"},{id:2,patientName:"Jane Smith",queueNumber:2,status:"with-doctor",phone:"+1 555-0102"},{id:3,patientName:"Bob Johnson",queueNumber:3,status:"waiting",phone:"+1 555-0103"}],n=[{id:1,patientName:"Alice Johnson",doctorId:1,doctorName:"Dr. John Smith",specialization:"Cardiology",appointmentDate:"2025-07-31",appointmentTime:"09:00 AM",status:"scheduled",phone:"+1 555-0201"},{id:2,patientName:"Bob Wilson",doctorId:2,doctorName:"Dr. Sarah Johnson",specialization:"Dermatology",appointmentDate:"2025-07-31",appointmentTime:"10:00 AM",status:"scheduled",phone:"+1 555-0202"},{id:3,patientName:"Carol Davis",doctorId:3,doctorName:"Dr. Mike Wilson",specialization:"Orthopedics",appointmentDate:"2025-08-01",appointmentTime:"02:00 PM",status:"scheduled",phone:"+1 555-0203"}],r=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise(t=>setTimeout(t,e))},o=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Success";return{statusCode:200,message:t,data:e}},l={login:async(e,t)=>{if(await r(300),e&&t)return o({access_token:"mock-jwt-token-"+Date.now(),user:{id:1,name:"Admin User",email:e,role:"admin"}},"Login successful");throw Error("Invalid credentials")}},c={getAll:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};await r();let t=[...s];return e.search&&(t=t.filter(t=>t.name.toLowerCase().includes(e.search.toLowerCase()))),e.specialization&&(t=t.filter(t=>t.specialization.toLowerCase()===e.specialization.toLowerCase())),e.location&&(t=t.filter(t=>t.location.toLowerCase().includes(e.location.toLowerCase()))),o(t,"Doctors retrieved successfully")},getById:async e=>{await r();let t=s.find(t=>t.id===e);if(!t)throw Error("Doctor not found");return o(t,"Doctor retrieved successfully")},create:async e=>{await r();let t={id:Date.now(),...e,isActive:!0};return s.push(t),o(t,"Doctor created successfully")},update:async(e,t)=>{await r();let a=s.findIndex(t=>t.id===e);if(-1===a)throw Error("Doctor not found");return s[a]={...s[a],...t},o(s[a],"Doctor updated successfully")},delete:async e=>{await r();let t=s.findIndex(t=>t.id===e);if(-1===t)throw Error("Doctor not found");return s[t].isActive=!1,o(null,"Doctor deleted successfully")},getAvailableSlots:async(e,t)=>{await r();let a=s.find(t=>t.id===e);if(!a)throw Error("Doctor not found");return o(a.availableSlots,"Available slots retrieved successfully")}},d={getAll:async()=>(await r(),o(i,"Queue retrieved successfully")),getCurrent:async()=>{await r();let e={waiting:i.filter(e=>"waiting"===e.status).length,"with-doctor":i.filter(e=>"with-doctor"===e.status).length,completed:i.filter(e=>"completed"===e.status).length};return o({queue:i,stats:e},"Current queue retrieved successfully")},getStats:async()=>(await r(),o({waiting:i.filter(e=>"waiting"===e.status).length,"with-doctor":i.filter(e=>"with-doctor"===e.status).length,completed:i.filter(e=>"completed"===e.status).length,total:i.length},"Queue stats retrieved successfully")),addPatient:async e=>{await r();let t={id:Date.now(),queueNumber:i.length+1,status:"waiting",patientName:e.patientName,phone:e.phone||"",timestamp:new Date().toISOString(),createdAt:new Date().toISOString()};return i.push(t),o(t,"Patient added to queue successfully")},updateStatus:async(e,t)=>{await r();let a=i.findIndex(t=>t.id===e);if(-1===a)throw Error("Patient not found in queue");return i[a].status=t,o(i[a],"Queue status updated successfully")},remove:async e=>{await r();let t=i.findIndex(t=>t.id===e);if(-1===t)throw Error("Patient not found in queue");return i.splice(t,1),o(null,"Patient removed from queue successfully")}},u={getAll:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};await r();let t=[...n];return e.search&&(t=t.filter(t=>t.patientName.toLowerCase().includes(e.search.toLowerCase())||t.doctorName.toLowerCase().includes(e.search.toLowerCase()))),e.doctorId&&(t=t.filter(t=>t.doctorId===e.doctorId)),e.date&&(t=t.filter(t=>t.appointmentDate===e.date)),e.status&&(t=t.filter(t=>t.status===e.status)),o(t,"Appointments retrieved successfully")},getToday:async()=>{await r();let e=new Date().toISOString().split("T")[0];return o(n.filter(t=>t.appointmentDate===e),"Today's appointments retrieved successfully")},getStats:async()=>{await r();let e=new Date().toISOString().split("T")[0];return o({total:n.length,today:n.filter(t=>t.appointmentDate===e).length,scheduled:n.filter(e=>"scheduled"===e.status).length,completed:n.filter(e=>"completed"===e.status).length,cancelled:n.filter(e=>"cancelled"===e.status).length},"Appointment stats retrieved successfully")},create:async e=>{await r();let t=s.find(t=>t.id===e.doctorId),a={id:Date.now(),doctorName:(null==t?void 0:t.name)||"Unknown Doctor",specialization:(null==t?void 0:t.specialization)||"Unknown",status:"scheduled",...e};return n.push(a),o(a,"Appointment created successfully")},update:async(e,t)=>{await r();let a=n.findIndex(t=>t.id===e);if(-1===a)throw Error("Appointment not found");let i=s.find(e=>e.id===t.doctorId);return i&&(t.doctorName=i.name,t.specialization=i.specialization),n[a]={...n[a],...t},o(n[a],"Appointment updated successfully")},cancel:async e=>{await r();let t=n.findIndex(t=>t.id===e);if(-1===t)throw Error("Appointment not found");return n.splice(t,1),o(null,"Appointment cancelled successfully")}},m={getStats:async()=>{await r();let e=new Date().toISOString().split("T")[0];return o({totalDoctors:s.filter(e=>e.isActive).length,todayAppointments:n.filter(t=>t.appointmentDate===e).length,patientsInQueue:i.filter(e=>"waiting"===e.status).length,completedToday:n.filter(t=>t.appointmentDate===e&&"completed"===t.status).length},"Dashboard stats retrieved successfully")}}}},function(e){e.O(0,[726,868,971,23,744],function(){return e(e.s=8102)}),_N_E=e.O()}]);