"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[313],{1313:function(e,t,a){a.d(t,{Z:function(){return x}});var n=a(7437),i=a(2265),s=a(9630),o=a(6463),r=a(7138),l=a(3852),c=a(1240),d=a(4241),u=a(8279),m=a(3409),h=a(4697),p=a(2873),f=a(9896);let g=[{name:"Dashboard",href:"/dashboard",icon:l.Z},{name:"Queue",href:"/dashboard/queue",icon:c.Z},{name:"Appointments",href:"/dashboard/appointments",icon:d.Z},{name:"Doctors",href:"/dashboard/doctors",icon:u.Z},{name:"Reports",href:"/dashboard/reports",icon:m.Z}];function x(e){let{children:t}=e,{user:a,logout:l}=(0,s.a)();(0,o.useRouter)();let c=(0,o.usePathname)(),[d,u]=(0,i.useState)(!1);return(0,n.jsxs)("div",{className:"min-h-screen bg-gray-50",children:[(0,n.jsxs)("div",{className:"fixed inset-0 z-50 lg:hidden ".concat(d?"block":"hidden"),children:[(0,n.jsx)("div",{className:"fixed inset-0 bg-gray-600 bg-opacity-75",onClick:()=>u(!1)}),(0,n.jsxs)("div",{className:"fixed inset-y-0 left-0 flex w-64 flex-col bg-white",children:[(0,n.jsxs)("div",{className:"flex h-16 items-center justify-between px-4",children:[(0,n.jsx)("h1",{className:"text-xl font-semibold text-gray-900",children:"Front Desk"}),(0,n.jsx)("button",{onClick:()=>u(!1),className:"text-gray-400 hover:text-gray-600",children:(0,n.jsx)(h.Z,{className:"h-6 w-6"})})]}),(0,n.jsx)("nav",{className:"flex-1 space-y-1 px-2 py-4",children:g.map(e=>{let t=c===e.href;return(0,n.jsxs)(r.default,{href:e.href,className:"group flex items-center px-2 py-2 text-sm font-medium rounded-md ".concat(t?"bg-primary-100 text-primary-900":"text-gray-600 hover:bg-gray-50 hover:text-gray-900"),onClick:()=>u(!1),children:[(0,n.jsx)(e.icon,{className:"mr-3 h-5 w-5"}),e.name]},e.name)})})]})]}),(0,n.jsx)("div",{className:"hidden lg:fixed lg:inset-y-0 lg:flex lg:w-64 lg:flex-col",children:(0,n.jsxs)("div",{className:"flex flex-col flex-grow bg-white border-r border-gray-200",children:[(0,n.jsx)("div",{className:"flex h-16 items-center px-4",children:(0,n.jsx)("h1",{className:"text-xl font-semibold text-gray-900",children:"Front Desk"})}),(0,n.jsx)("nav",{className:"flex-1 space-y-1 px-2 py-4",children:g.map(e=>{let t=c===e.href;return(0,n.jsxs)(r.default,{href:e.href,className:"group flex items-center px-2 py-2 text-sm font-medium rounded-md ".concat(t?"bg-primary-100 text-primary-900":"text-gray-600 hover:bg-gray-50 hover:text-gray-900"),children:[(0,n.jsx)(e.icon,{className:"mr-3 h-5 w-5"}),e.name]},e.name)})})]})}),(0,n.jsxs)("div",{className:"lg:pl-64",children:[(0,n.jsxs)("div",{className:"sticky top-0 z-40 flex h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 bg-white px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8",children:[(0,n.jsx)("button",{type:"button",className:"-m-2.5 p-2.5 text-gray-700 lg:hidden",onClick:()=>u(!0),children:(0,n.jsx)(p.Z,{className:"h-6 w-6"})}),(0,n.jsxs)("div",{className:"flex flex-1 gap-x-4 self-stretch lg:gap-x-6",children:[(0,n.jsx)("div",{className:"flex flex-1"}),(0,n.jsxs)("div",{className:"flex items-center gap-x-4 lg:gap-x-6",children:[(0,n.jsx)("div",{className:"hidden lg:block lg:h-6 lg:w-px lg:bg-gray-200"}),(0,n.jsxs)("div",{className:"flex items-center gap-x-4",children:[(0,n.jsxs)("span",{className:"text-sm text-gray-700",children:["Welcome, ",null==a?void 0:a.name]}),(0,n.jsxs)("button",{onClick:()=>{l()},className:"flex items-center gap-x-2 text-sm text-gray-700 hover:text-gray-900",children:[(0,n.jsx)(f.Z,{className:"h-4 w-4"}),"Logout"]})]})]})]})]}),(0,n.jsx)("main",{className:"py-6",children:(0,n.jsx)("div",{className:"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8",children:t})})]})]})}},9630:function(e,t,a){a.d(t,{AuthProvider:function(){return l},a:function(){return c}});var n=a(7437),i=a(2265),s=a(6463),o=a(2800);let r=(0,i.createContext)(void 0);function l(e){let{children:t}=e,[a,l]=(0,i.useState)(null),[c,d]=(0,i.useState)(!0),u=(0,s.useRouter)();(0,i.useEffect)(()=>{localStorage.getItem("authToken")&&l({id:"1",email:"staff@clinic.com",name:"Front Desk Staff",role:"staff"}),d(!1)},[]);let m=async(e,t)=>{try{if(d(!0),e&&t){let a=await o.kv.login(e,t);if(200===a.statusCode)return localStorage.setItem("authToken",a.data.access_token),l({id:a.data.user.id.toString(),email:a.data.user.email,name:a.data.user.name,role:a.data.user.role}),!0}return!1}catch(e){return console.error("Login error:",e),!1}finally{d(!1)}};return(0,n.jsx)(r.Provider,{value:{user:a,login:m,logout:()=>{localStorage.removeItem("authToken"),l(null),u.push("/login")},isLoading:c},children:t})}function c(){let e=(0,i.useContext)(r);if(void 0===e)throw Error("useAuth must be used within an AuthProvider");return e}},2800:function(e,t,a){a.d(t,{CN:function(){return d},kv:function(){return l},mr:function(){return u},vD:function(){return m},vY:function(){return c}});let n=[{id:1,name:"Dr. John Smith",specialization:"Cardiology",gender:"male",location:"Floor 1, Room 101",phone:"+1 234-567-8900",email:"john.smith@clinic.com",availableSlots:["09:00 AM","10:00 AM","02:00 PM","03:00 PM"],isActive:!0},{id:2,name:"Dr. Sarah Johnson",specialization:"Dermatology",gender:"female",location:"Floor 2, Room 205",phone:"+1 234-567-8901",email:"sarah.johnson@clinic.com",availableSlots:["09:30 AM","11:00 AM","02:30 PM","04:00 PM"],isActive:!0},{id:3,name:"Dr. Mike Wilson",specialization:"Orthopedics",gender:"male",location:"Floor 1, Room 103",phone:"+1 234-567-8902",email:"mike.wilson@clinic.com",availableSlots:["10:30 AM","02:00 PM","03:30 PM","04:30 PM"],isActive:!0},{id:4,name:"Dr. Emily Brown",specialization:"Pediatrics",gender:"female",location:"Floor 3, Room 301",phone:"+1 234-567-8903",email:"emily.brown@clinic.com",availableSlots:["09:00 AM","11:30 AM","02:00 PM","03:30 PM"],isActive:!0}],i=[{id:1,patientName:"John Doe",queueNumber:1,status:"waiting",phone:"+1 555-0101"},{id:2,patientName:"Jane Smith",queueNumber:2,status:"with-doctor",phone:"+1 555-0102"},{id:3,patientName:"Bob Johnson",queueNumber:3,status:"waiting",phone:"+1 555-0103"}],s=[{id:1,patientName:"Alice Johnson",doctorId:1,doctorName:"Dr. John Smith",specialization:"Cardiology",appointmentDate:"2025-07-31",appointmentTime:"09:00 AM",status:"scheduled",phone:"+1 555-0201"},{id:2,patientName:"Bob Wilson",doctorId:2,doctorName:"Dr. Sarah Johnson",specialization:"Dermatology",appointmentDate:"2025-07-31",appointmentTime:"10:00 AM",status:"scheduled",phone:"+1 555-0202"},{id:3,patientName:"Carol Davis",doctorId:3,doctorName:"Dr. Mike Wilson",specialization:"Orthopedics",appointmentDate:"2025-08-01",appointmentTime:"02:00 PM",status:"scheduled",phone:"+1 555-0203"}],o=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:500;return new Promise(t=>setTimeout(t,e))},r=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Success";return{statusCode:200,message:t,data:e}},l={login:async(e,t)=>{if(await o(300),e&&t)return r({access_token:"mock-jwt-token-"+Date.now(),user:{id:1,name:"Admin User",email:e,role:"admin"}},"Login successful");throw Error("Invalid credentials")}},c={getAll:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};await o();let t=[...n];return e.search&&(t=t.filter(t=>t.name.toLowerCase().includes(e.search.toLowerCase()))),e.specialization&&(t=t.filter(t=>t.specialization.toLowerCase()===e.specialization.toLowerCase())),e.location&&(t=t.filter(t=>t.location.toLowerCase().includes(e.location.toLowerCase()))),r(t,"Doctors retrieved successfully")},getById:async e=>{await o();let t=n.find(t=>t.id===e);if(!t)throw Error("Doctor not found");return r(t,"Doctor retrieved successfully")},create:async e=>{await o();let t={id:Date.now(),...e,isActive:!0};return n.push(t),r(t,"Doctor created successfully")},update:async(e,t)=>{await o();let a=n.findIndex(t=>t.id===e);if(-1===a)throw Error("Doctor not found");return n[a]={...n[a],...t},r(n[a],"Doctor updated successfully")},delete:async e=>{await o();let t=n.findIndex(t=>t.id===e);if(-1===t)throw Error("Doctor not found");return n[t].isActive=!1,r(null,"Doctor deleted successfully")},getAvailableSlots:async(e,t)=>{await o();let a=n.find(t=>t.id===e);if(!a)throw Error("Doctor not found");return r(a.availableSlots,"Available slots retrieved successfully")}},d={getAll:async()=>(await o(),r(i,"Queue retrieved successfully")),getCurrent:async()=>{await o();let e={waiting:i.filter(e=>"waiting"===e.status).length,"with-doctor":i.filter(e=>"with-doctor"===e.status).length,completed:i.filter(e=>"completed"===e.status).length};return r({queue:i,stats:e},"Current queue retrieved successfully")},getStats:async()=>(await o(),r({waiting:i.filter(e=>"waiting"===e.status).length,"with-doctor":i.filter(e=>"with-doctor"===e.status).length,completed:i.filter(e=>"completed"===e.status).length,total:i.length},"Queue stats retrieved successfully")),addPatient:async e=>{await o();let t={id:Date.now(),queueNumber:i.length+1,status:"waiting",patientName:e.patientName,phone:e.phone||"",timestamp:new Date().toISOString(),createdAt:new Date().toISOString()};return i.push(t),r(t,"Patient added to queue successfully")},updateStatus:async(e,t)=>{await o();let a=i.findIndex(t=>t.id===e);if(-1===a)throw Error("Patient not found in queue");return i[a].status=t,r(i[a],"Queue status updated successfully")},remove:async e=>{await o();let t=i.findIndex(t=>t.id===e);if(-1===t)throw Error("Patient not found in queue");return i.splice(t,1),r(null,"Patient removed from queue successfully")}},u={getAll:async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};await o();let t=[...s];return e.search&&(t=t.filter(t=>t.patientName.toLowerCase().includes(e.search.toLowerCase())||t.doctorName.toLowerCase().includes(e.search.toLowerCase()))),e.doctorId&&(t=t.filter(t=>t.doctorId===e.doctorId)),e.date&&(t=t.filter(t=>t.appointmentDate===e.date)),e.status&&(t=t.filter(t=>t.status===e.status)),r(t,"Appointments retrieved successfully")},getToday:async()=>{await o();let e=new Date().toISOString().split("T")[0];return r(s.filter(t=>t.appointmentDate===e),"Today's appointments retrieved successfully")},getStats:async()=>{await o();let e=new Date().toISOString().split("T")[0];return r({total:s.length,today:s.filter(t=>t.appointmentDate===e).length,scheduled:s.filter(e=>"scheduled"===e.status).length,completed:s.filter(e=>"completed"===e.status).length,cancelled:s.filter(e=>"cancelled"===e.status).length},"Appointment stats retrieved successfully")},create:async e=>{await o();let t=n.find(t=>t.id===e.doctorId),a={id:Date.now(),doctorName:(null==t?void 0:t.name)||"Unknown Doctor",specialization:(null==t?void 0:t.specialization)||"Unknown",status:"scheduled",...e};return s.push(a),r(a,"Appointment created successfully")},update:async(e,t)=>{await o();let a=s.findIndex(t=>t.id===e);if(-1===a)throw Error("Appointment not found");let i=n.find(e=>e.id===t.doctorId);return i&&(t.doctorName=i.name,t.specialization=i.specialization),s[a]={...s[a],...t},r(s[a],"Appointment updated successfully")},cancel:async e=>{await o();let t=s.findIndex(t=>t.id===e);if(-1===t)throw Error("Appointment not found");return s.splice(t,1),r(null,"Appointment cancelled successfully")}},m={getStats:async()=>{await o();let e=new Date().toISOString().split("T")[0];return r({totalDoctors:n.filter(e=>e.isActive).length,todayAppointments:s.filter(t=>t.appointmentDate===e).length,patientsInQueue:i.filter(e=>"waiting"===e.status).length,completedToday:s.filter(t=>t.appointmentDate===e&&"completed"===t.status).length},"Dashboard stats retrieved successfully")}}}}]);